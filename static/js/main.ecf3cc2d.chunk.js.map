{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","tabIndex","setTabIndex","timeout","setTimeout","clearTimeout","selectedIndex","onSelect","index","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecf3cc2d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Editor(props) {\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n  } = props\r\n  const [open, setOpen] = useState(true)\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => setOpen(prevOpen => !prevOpen)}\r\n        >\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'material',\r\n          lineNumbers: true\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Editor from './Editor'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nfunction App() {\r\n  \r\n  const [html, setHtml] = useLocalStorage('html', '')\r\n  const [css, setCss] = useLocalStorage('css', '')\r\n  const [js, setJs] = useLocalStorage('js', '')\r\n  const [srcDoc, setSrcDoc] = useState('')\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script>${js}</script>\r\n        </html>\r\n      `)\r\n    }, 250)\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [html, css, js])\r\n\r\n  return (\r\n    <>\r\n    {/* <div className=\"beforetabs\">\r\n    <center><h1>Nithish's Online IDE</h1></center></div> */}\r\n    <div className=\"App mt-4\">\r\n    <Tabs selectedIndex={tabIndex} onSelect={index => setTabIndex(index)}>\r\n      <TabList>\r\n        <Tab>HTML</Tab>\r\n        <Tab>CSS</Tab>\r\n        <Tab>JS</Tab>\r\n      </TabList>\r\n      <TabPanel>\r\n      <h1>Add the HTML part here</h1>\r\n      <div className=\"pane top-pane\">\r\n        \r\n        <Editor\r\n          language=\"xml\"\r\n          displayName=\"HTML\"\r\n          value={html}\r\n          onChange={setHtml}\r\n        /></div>\r\n        <h1>Live Preview</h1>\r\n        <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"output\"\r\n          sandbox=\"allow-scripts\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n        </TabPanel>\r\n      <TabPanel>\r\n      <h1>Add the CSS part here</h1>\r\n      <div className=\"pane top-pane\">\r\n       \r\n      <Editor\r\n          language=\"css\"\r\n          displayName=\"CSS\"\r\n          value={css}\r\n          onChange={setCss}\r\n        /></div>\r\n         <h1>Live Preview</h1>\r\n        <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"output\"\r\n          sandbox=\"allow-scripts\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n      </TabPanel>\r\n\r\n      <TabPanel>\r\n      <h1>Add the JS part here</h1>\r\n      <div className=\"pane top-pane\">\r\n       \r\n      <Editor\r\n          language=\"javascript\"\r\n          displayName=\"JS\"\r\n          value={js}\r\n          onChange={setJs}\r\n        />\r\n      </div>`\r\n      <h1>Live Preview</h1>\r\n      <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"output\"\r\n          sandbox=\"allow-scripts\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>`\r\n      </TabPanel>\r\n\r\n    </Tabs>\r\n      </div>\r\n      {\r\n      /* <div className=\"pane top-pane\"> */}\r\n        {/* <Editor\r\n          language=\"xml\"\r\n          displayName=\"HTML\"\r\n          value={html}\r\n          onChange={setHtml}\r\n        /> */}\r\n        {/* <Editor\r\n          language=\"css\"\r\n          displayName=\"CSS\"\r\n          value={css}\r\n          onChange={setCss}\r\n        /> */}\r\n        {/* <Editor\r\n          language=\"javascript\"\r\n          displayName=\"JS\"\r\n          value={js}\r\n          onChange={setJs}\r\n        /> */}\r\n      {/* </div> */}\r\n      {/* <h1>Live Preview</h1> */}\r\n      {/* <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"output\"\r\n          sandbox=\"allow-scripts\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div> */}\r\n    </>\r\n  )\r\n}\r\nexport default App;\r\n// export default () => (\r\n//   <Tabs>\r\n//     <TabList>\r\n//       <Tab>Title 1</Tab>\r\n//       <Tab>Title 2</Tab>\r\n//     </TabList>\r\n\r\n//     <TabPanel>\r\n//       <h2>Any content 1</h2>\r\n//     </TabPanel>\r\n//     <TabPanel>\r\n//       <h2>Any content 2</h2>\r\n//     </TabPanel>\r\n//   </Tabs>\r\n// );\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}